{"name":"Loqt","tagline":"Logic Objects and Qt","body":"loqt\r\n====\r\n\r\nLogic Objecs and Qt\r\n\r\n+ lqXDot: just a rendering of Graphviz (via library cgraph,xdot) to Qt Graphic Scene.\r\n  Such rendering plays a role in my next project (to be published), showcasing (SWI)Prolog direct control of Qt via reflection.\r\n\r\n+ spqr: a basic SWI-Prolog Graphviz interface (WIP).\r\n  Graphviz rendering by Prolog.\r\n\r\n==========\r\n\r\nlqXDot components:\r\n\r\n+ lqXDot is the actual Graphviz processor.\r\n  + lqXDotScene the main component.\r\n  + lqContextGraph shows a way to encapsulate the Graphviz pointer model in C++.\r\n\r\n+ lqXDot_test is an utility UI,\r\n  with basic file/mode maintenance,\r\n  display both lqXDot/SVG rendering,\r\n  and allow editing .dot,.gv with syntax coloring.\r\n\r\n+ lqUty collects some basic Qt interface helpers.\r\n\r\n==========\r\n\r\nspqr features:\r\n\r\n+ editing Prolog files via CodeMirror (requires QtWebKit)\r\n+ pqConsole control\r\n+ inline plDoc help (requires QtWebKit)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}